@using Core.Extensions
<FluentButton Id="btnDueDate"
              IconStart="@(new Icons.Regular.Size16.Calendar())"
              Title="Due date"
              Appearance="Appearance.Lightweight"
              @onclick="@(() => open = !open)">
    @if (dueDate is not null)
    {
        <span>@dueDate!.MenuSelectDisplay()</span>
    }
</FluentButton>
<FluentMenu Anchor="btnDueDate" @bind-Open="open" VerticalThreshold="170">
    <h6 style="text-align: center; margin: .5rem 0;">Due</h6>
    <FluentDivider />
    <FluentMenuItem OnClick="SelectDueDateToday">
        Today
        <span slot="start" style="display: flex; align-items: center;"><FluentIcon Value="@(new Icons.Regular.Size16.CalendarToday())" Color="Color.Neutral" Slot="start" /></span>
    </FluentMenuItem>
    <FluentMenuItem OnClick="SelectDueDateTomorrow">
        <span slot="start" style="display: flex; align-items: center;"><FluentIcon Value="@(new Icons.Regular.Size16.CalendarAdd())" Color="Color.Neutral" Slot="start" /></span>
        Tomorrow
    </FluentMenuItem>
    <FluentMenuItem OnClick="SelectDueDateNextWeek">
        <span slot="start" style="display: flex; align-items: center;"><FluentIcon Value="@(new Icons.Regular.Size16.CalendarWorkWeek())" Color="Color.Neutral" Slot="start" /></span>
        Next week
    </FluentMenuItem>
    <FluentMenuItem id="btnCustomDueDate" OnClick="@((e) => dueDatePickerOpen = !dueDatePickerOpen)">
        <span slot="start" style="display: flex; align-items: center;"><FluentIcon Value="@(new Icons.Regular.Size16.CalendarSearch())" Color="Color.Neutral" Slot="start" /></span>
        Pick a date
    </FluentMenuItem>
    @if (dueDate is not null)
    {
        <FluentDivider />
        <FluentMenuItem OnClick="@(() => dueDate = null)">
            <span slot="start" style="display: flex; align-items: center;">
                <FluentIcon Value="@(new Icons.Regular.Size16.CalendarCancel())" Color="Color.Warning" Slot="start" />
            </span>
            Clear
        </FluentMenuItem>
    }
</FluentMenu>


@code {

    [Parameter]
    public DateTime? DueDate { get; set; }

    private string title = string.Empty;

    private DateTime? dueDate = null;

    private bool expanded = true;

    private bool dueDatePickerOpen = false;

    private bool open = false;

    private void SelectDueDateToday()
    {
        dueDate = DateTime.Today;
        StateHasChanged();
    }

    private void SelectDueDateTomorrow()
    {
        dueDate = DateTime.Today.AddDays(1);
        StateHasChanged();
    }

    private void SelectDueDateNextWeek()
    {
        dueDate = DateTime.Today.AddDays(7);
        StateHasChanged();
    }

    private void OnDueDateSelected(DateTime? date)
    {
        dueDate = date;
        dueDatePickerOpen = false;
        StateHasChanged();
    }
}