@using Application.Labels.Commands.DeleteLabel
@using MediatR

<MudDialog>
    <TitleContent>
        <h2>Delete Folder</h2>
    </TitleContent>
    <DialogContent>
        <MudPaper Elevation="0" MinHeight="100px">
            <MudText Typo="Typo.h6">Are you sure you want to delete this folder?</MudText>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="OnClickDelete">Delete</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Inject]
    public IMediator Mediator { get; set; } = default!;

    [Parameter]
    public int FolderId { get; set; }

    [Parameter]
    public string ApplicationUserId { get; set; } = string.Empty;

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    private async Task OnClickDelete()
    {
        try
        {
            var command = new DeleteLabelCommand(FolderId, ApplicationUserId);
            var result = await Mediator.Send(command);

            if (result.IsSuccess)
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
